// package: okapi.examples.v1
// file: okapi/examples/v1/examples.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as okapi_examples_v1_examples_pb from "../../../okapi/examples/v1/examples_pb";
import * as pbmse_v1_pbmse_pb from "../../../pbmse/v1/pbmse_pb";

interface ISecureExampleServiceService
  extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
  unary: ISecureExampleServiceService_IUnary;
  serverStreaming: ISecureExampleServiceService_IServerStreaming;
}

interface ISecureExampleServiceService_IUnary
  extends grpc.MethodDefinition<
    pbmse_v1_pbmse_pb.EncryptedMessage,
    pbmse_v1_pbmse_pb.EncryptedMessage
  > {
  path: "/okapi.examples.v1.SecureExampleService/Unary";
  requestStream: false;
  responseStream: false;
  requestSerialize: grpc.serialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  requestDeserialize: grpc.deserialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  responseSerialize: grpc.serialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  responseDeserialize: grpc.deserialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
}
interface ISecureExampleServiceService_IServerStreaming
  extends grpc.MethodDefinition<
    pbmse_v1_pbmse_pb.EncryptedMessage,
    pbmse_v1_pbmse_pb.EncryptedMessage
  > {
  path: "/okapi.examples.v1.SecureExampleService/ServerStreaming";
  requestStream: false;
  responseStream: true;
  requestSerialize: grpc.serialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  requestDeserialize: grpc.deserialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  responseSerialize: grpc.serialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
  responseDeserialize: grpc.deserialize<pbmse_v1_pbmse_pb.EncryptedMessage>;
}

export const SecureExampleServiceService: ISecureExampleServiceService;

export interface ISecureExampleServiceServer
  extends grpc.UntypedServiceImplementation {
  unary: grpc.handleUnaryCall<
    pbmse_v1_pbmse_pb.EncryptedMessage,
    pbmse_v1_pbmse_pb.EncryptedMessage
  >;
  serverStreaming: grpc.handleServerStreamingCall<
    pbmse_v1_pbmse_pb.EncryptedMessage,
    pbmse_v1_pbmse_pb.EncryptedMessage
  >;
}

export interface ISecureExampleServiceClient {
  unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata: grpc.Metadata,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata: grpc.Metadata,
    options: Partial<grpc.CallOptions>,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  serverStreaming(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    options?: Partial<grpc.CallOptions>
  ): grpc.ClientReadableStream<pbmse_v1_pbmse_pb.EncryptedMessage>;
  serverStreaming(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata?: grpc.Metadata,
    options?: Partial<grpc.CallOptions>
  ): grpc.ClientReadableStream<pbmse_v1_pbmse_pb.EncryptedMessage>;
}

export class SecureExampleServiceClient extends grpc.Client
  implements ISecureExampleServiceClient {
  constructor(
    address: string,
    credentials: grpc.ChannelCredentials,
    options?: Partial<grpc.ClientOptions>
  );
  public unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  public unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata: grpc.Metadata,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  public unary(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata: grpc.Metadata,
    options: Partial<grpc.CallOptions>,
    callback: (
      error: grpc.ServiceError | null,
      response: pbmse_v1_pbmse_pb.EncryptedMessage
    ) => void
  ): grpc.ClientUnaryCall;
  public serverStreaming(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    options?: Partial<grpc.CallOptions>
  ): grpc.ClientReadableStream<pbmse_v1_pbmse_pb.EncryptedMessage>;
  public serverStreaming(
    request: pbmse_v1_pbmse_pb.EncryptedMessage,
    metadata?: grpc.Metadata,
    options?: Partial<grpc.CallOptions>
  ): grpc.ClientReadableStream<pbmse_v1_pbmse_pb.EncryptedMessage>;
}
