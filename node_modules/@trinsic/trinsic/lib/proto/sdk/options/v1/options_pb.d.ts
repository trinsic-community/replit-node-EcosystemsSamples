// package: sdk.options.v1
// file: sdk/options/v1/options.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";

export class ServiceOptions extends jspb.Message { 
    getServerEndpoint(): string;
    setServerEndpoint(value: string): ServiceOptions;
    getServerPort(): number;
    setServerPort(value: number): ServiceOptions;
    getServerUseTls(): boolean;
    setServerUseTls(value: boolean): ServiceOptions;
    getAuthToken(): string;
    setAuthToken(value: string): ServiceOptions;
    getDefaultEcosystem(): string;
    setDefaultEcosystem(value: string): ServiceOptions;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ServiceOptions.AsObject;
    static toObject(includeInstance: boolean, msg: ServiceOptions): ServiceOptions.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ServiceOptions, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ServiceOptions;
    static deserializeBinaryFromReader(message: ServiceOptions, reader: jspb.BinaryReader): ServiceOptions;
}

export namespace ServiceOptions {
    export type AsObject = {
        serverEndpoint: string,
        serverPort: number,
        serverUseTls: boolean,
        authToken: string,
        defaultEcosystem: string,
    }
}
