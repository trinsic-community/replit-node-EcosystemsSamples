// source: okapi/keys/v1/keys.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.okapi.keys.v1.GenerateKeyRequest', null, global);
goog.exportSymbol('proto.okapi.keys.v1.GenerateKeyResponse', null, global);
goog.exportSymbol('proto.okapi.keys.v1.JsonWebKey', null, global);
goog.exportSymbol('proto.okapi.keys.v1.KeyType', null, global);
goog.exportSymbol('proto.okapi.keys.v1.ResolveRequest', null, global);
goog.exportSymbol('proto.okapi.keys.v1.ResolveResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.okapi.keys.v1.GenerateKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.okapi.keys.v1.GenerateKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.okapi.keys.v1.GenerateKeyRequest.displayName = 'proto.okapi.keys.v1.GenerateKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.okapi.keys.v1.GenerateKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.okapi.keys.v1.GenerateKeyResponse.repeatedFields_, null);
};
goog.inherits(proto.okapi.keys.v1.GenerateKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.okapi.keys.v1.GenerateKeyResponse.displayName = 'proto.okapi.keys.v1.GenerateKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.okapi.keys.v1.ResolveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.okapi.keys.v1.ResolveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.okapi.keys.v1.ResolveRequest.displayName = 'proto.okapi.keys.v1.ResolveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.okapi.keys.v1.ResolveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.okapi.keys.v1.ResolveResponse.repeatedFields_, null);
};
goog.inherits(proto.okapi.keys.v1.ResolveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.okapi.keys.v1.ResolveResponse.displayName = 'proto.okapi.keys.v1.ResolveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.okapi.keys.v1.JsonWebKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.okapi.keys.v1.JsonWebKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.okapi.keys.v1.JsonWebKey.displayName = 'proto.okapi.keys.v1.JsonWebKey';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.okapi.keys.v1.GenerateKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.okapi.keys.v1.GenerateKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.GenerateKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    seed: msg.getSeed_asB64(),
    keyType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.okapi.keys.v1.GenerateKeyRequest}
 */
proto.okapi.keys.v1.GenerateKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.okapi.keys.v1.GenerateKeyRequest;
  return proto.okapi.keys.v1.GenerateKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.okapi.keys.v1.GenerateKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.okapi.keys.v1.GenerateKeyRequest}
 */
proto.okapi.keys.v1.GenerateKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSeed(value);
      break;
    case 2:
      var value = /** @type {!proto.okapi.keys.v1.KeyType} */ (reader.readEnum());
      msg.setKeyType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.okapi.keys.v1.GenerateKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.okapi.keys.v1.GenerateKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.GenerateKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getKeyType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional bytes seed = 1;
 * @return {!(string|Uint8Array)}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.getSeed = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes seed = 1;
 * This is a type-conversion wrapper around `getSeed()`
 * @return {string}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.getSeed_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSeed()));
};


/**
 * optional bytes seed = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSeed()`
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.getSeed_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSeed()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.okapi.keys.v1.GenerateKeyRequest} returns this
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.setSeed = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional KeyType key_type = 2;
 * @return {!proto.okapi.keys.v1.KeyType}
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.getKeyType = function() {
  return /** @type {!proto.okapi.keys.v1.KeyType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.okapi.keys.v1.KeyType} value
 * @return {!proto.okapi.keys.v1.GenerateKeyRequest} returns this
 */
proto.okapi.keys.v1.GenerateKeyRequest.prototype.setKeyType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.okapi.keys.v1.GenerateKeyResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.okapi.keys.v1.GenerateKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.okapi.keys.v1.GenerateKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.GenerateKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: jspb.Message.toObjectList(msg.getKeyList(),
    proto.okapi.keys.v1.JsonWebKey.toObject, includeInstance),
    didDocument: (f = msg.getDidDocument()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse}
 */
proto.okapi.keys.v1.GenerateKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.okapi.keys.v1.GenerateKeyResponse;
  return proto.okapi.keys.v1.GenerateKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.okapi.keys.v1.GenerateKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse}
 */
proto.okapi.keys.v1.GenerateKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.okapi.keys.v1.JsonWebKey;
      reader.readMessage(value,proto.okapi.keys.v1.JsonWebKey.deserializeBinaryFromReader);
      msg.addKey(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDidDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.okapi.keys.v1.GenerateKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.okapi.keys.v1.GenerateKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.GenerateKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.okapi.keys.v1.JsonWebKey.serializeBinaryToWriter
    );
  }
  f = message.getDidDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JsonWebKey key = 1;
 * @return {!Array<!proto.okapi.keys.v1.JsonWebKey>}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.getKeyList = function() {
  return /** @type{!Array<!proto.okapi.keys.v1.JsonWebKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.okapi.keys.v1.JsonWebKey, 1));
};


/**
 * @param {!Array<!proto.okapi.keys.v1.JsonWebKey>} value
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse} returns this
*/
proto.okapi.keys.v1.GenerateKeyResponse.prototype.setKeyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.okapi.keys.v1.JsonWebKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.okapi.keys.v1.JsonWebKey}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.addKey = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.okapi.keys.v1.JsonWebKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse} returns this
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional google.protobuf.Struct did_document = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.getDidDocument = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse} returns this
*/
proto.okapi.keys.v1.GenerateKeyResponse.prototype.setDidDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.okapi.keys.v1.GenerateKeyResponse} returns this
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.clearDidDocument = function() {
  return this.setDidDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.okapi.keys.v1.GenerateKeyResponse.prototype.hasDidDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.okapi.keys.v1.ResolveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.okapi.keys.v1.ResolveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.okapi.keys.v1.ResolveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.ResolveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.okapi.keys.v1.ResolveRequest}
 */
proto.okapi.keys.v1.ResolveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.okapi.keys.v1.ResolveRequest;
  return proto.okapi.keys.v1.ResolveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.okapi.keys.v1.ResolveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.okapi.keys.v1.ResolveRequest}
 */
proto.okapi.keys.v1.ResolveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.ResolveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.okapi.keys.v1.ResolveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.okapi.keys.v1.ResolveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.ResolveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.okapi.keys.v1.ResolveRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.ResolveRequest} returns this
 */
proto.okapi.keys.v1.ResolveRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.okapi.keys.v1.ResolveResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.okapi.keys.v1.ResolveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.okapi.keys.v1.ResolveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.ResolveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    didDocument: (f = msg.getDidDocument()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    proto.okapi.keys.v1.JsonWebKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.okapi.keys.v1.ResolveResponse}
 */
proto.okapi.keys.v1.ResolveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.okapi.keys.v1.ResolveResponse;
  return proto.okapi.keys.v1.ResolveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.okapi.keys.v1.ResolveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.okapi.keys.v1.ResolveResponse}
 */
proto.okapi.keys.v1.ResolveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDidDocument(value);
      break;
    case 2:
      var value = new proto.okapi.keys.v1.JsonWebKey;
      reader.readMessage(value,proto.okapi.keys.v1.JsonWebKey.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.okapi.keys.v1.ResolveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.okapi.keys.v1.ResolveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.ResolveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDidDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.okapi.keys.v1.JsonWebKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct did_document = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.getDidDocument = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.okapi.keys.v1.ResolveResponse} returns this
*/
proto.okapi.keys.v1.ResolveResponse.prototype.setDidDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.okapi.keys.v1.ResolveResponse} returns this
 */
proto.okapi.keys.v1.ResolveResponse.prototype.clearDidDocument = function() {
  return this.setDidDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.hasDidDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated JsonWebKey keys = 2;
 * @return {!Array<!proto.okapi.keys.v1.JsonWebKey>}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.getKeysList = function() {
  return /** @type{!Array<!proto.okapi.keys.v1.JsonWebKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.okapi.keys.v1.JsonWebKey, 2));
};


/**
 * @param {!Array<!proto.okapi.keys.v1.JsonWebKey>} value
 * @return {!proto.okapi.keys.v1.ResolveResponse} returns this
*/
proto.okapi.keys.v1.ResolveResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.okapi.keys.v1.JsonWebKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.okapi.keys.v1.JsonWebKey}
 */
proto.okapi.keys.v1.ResolveResponse.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.okapi.keys.v1.JsonWebKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.okapi.keys.v1.ResolveResponse} returns this
 */
proto.okapi.keys.v1.ResolveResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.toObject = function(opt_includeInstance) {
  return proto.okapi.keys.v1.JsonWebKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.okapi.keys.v1.JsonWebKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.JsonWebKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    kid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x: jspb.Message.getFieldWithDefault(msg, 2, ""),
    y: jspb.Message.getFieldWithDefault(msg, 3, ""),
    d: jspb.Message.getFieldWithDefault(msg, 4, ""),
    crv: jspb.Message.getFieldWithDefault(msg, 5, ""),
    kty: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.okapi.keys.v1.JsonWebKey}
 */
proto.okapi.keys.v1.JsonWebKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.okapi.keys.v1.JsonWebKey;
  return proto.okapi.keys.v1.JsonWebKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.okapi.keys.v1.JsonWebKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.okapi.keys.v1.JsonWebKey}
 */
proto.okapi.keys.v1.JsonWebKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setY(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setD(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrv(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setKty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.okapi.keys.v1.JsonWebKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.okapi.keys.v1.JsonWebKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.okapi.keys.v1.JsonWebKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getX();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getY();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getD();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCrv();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getKty();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string kid = 1;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getKid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setKid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string x = 2;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getX = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setX = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string y = 3;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getY = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setY = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string d = 4;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getD = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setD = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string crv = 5;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getCrv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setCrv = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string kty = 6;
 * @return {string}
 */
proto.okapi.keys.v1.JsonWebKey.prototype.getKty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.okapi.keys.v1.JsonWebKey} returns this
 */
proto.okapi.keys.v1.JsonWebKey.prototype.setKty = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.okapi.keys.v1.KeyType = {
  KEY_TYPE_UNSPECIFIED: 0,
  KEY_TYPE_ED25519: 1,
  KEY_TYPE_X25519: 2,
  KEY_TYPE_P256: 3,
  KEY_TYPE_BLS12381G1G2: 4,
  KEY_TYPE_SECP256K1: 5
};

goog.object.extend(exports, proto.okapi.keys.v1);
