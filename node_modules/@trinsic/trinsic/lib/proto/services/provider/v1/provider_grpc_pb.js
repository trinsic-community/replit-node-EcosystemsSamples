// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('@grpc/grpc-js');
var services_provider_v1_provider_pb = require('../../../services/provider/v1/provider_pb.js');
var services_common_v1_common_pb = require('../../../services/common/v1/common_pb.js');
var services_account_v1_account_pb = require('../../../services/account/v1/account_pb.js');

function serialize_services_provider_v1_CreateEcosystemRequest(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.CreateEcosystemRequest)) {
    throw new Error('Expected argument of type services.provider.v1.CreateEcosystemRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_CreateEcosystemRequest(buffer_arg) {
  return services_provider_v1_provider_pb.CreateEcosystemRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_CreateEcosystemResponse(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.CreateEcosystemResponse)) {
    throw new Error('Expected argument of type services.provider.v1.CreateEcosystemResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_CreateEcosystemResponse(buffer_arg) {
  return services_provider_v1_provider_pb.CreateEcosystemResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_GenerateTokenRequest(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.GenerateTokenRequest)) {
    throw new Error('Expected argument of type services.provider.v1.GenerateTokenRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_GenerateTokenRequest(buffer_arg) {
  return services_provider_v1_provider_pb.GenerateTokenRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_GenerateTokenResponse(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.GenerateTokenResponse)) {
    throw new Error('Expected argument of type services.provider.v1.GenerateTokenResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_GenerateTokenResponse(buffer_arg) {
  return services_provider_v1_provider_pb.GenerateTokenResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_InvitationStatusRequest(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.InvitationStatusRequest)) {
    throw new Error('Expected argument of type services.provider.v1.InvitationStatusRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_InvitationStatusRequest(buffer_arg) {
  return services_provider_v1_provider_pb.InvitationStatusRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_InvitationStatusResponse(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.InvitationStatusResponse)) {
    throw new Error('Expected argument of type services.provider.v1.InvitationStatusResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_InvitationStatusResponse(buffer_arg) {
  return services_provider_v1_provider_pb.InvitationStatusResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_InviteRequest(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.InviteRequest)) {
    throw new Error('Expected argument of type services.provider.v1.InviteRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_InviteRequest(buffer_arg) {
  return services_provider_v1_provider_pb.InviteRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_provider_v1_InviteResponse(arg) {
  if (!(arg instanceof services_provider_v1_provider_pb.InviteResponse)) {
    throw new Error('Expected argument of type services.provider.v1.InviteResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_provider_v1_InviteResponse(buffer_arg) {
  return services_provider_v1_provider_pb.InviteResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var ProviderService = exports.ProviderService = {
  // Create new ecosystem and assign the authenticated user as owner
createEcosystem: {
    path: '/services.provider.v1.Provider/CreateEcosystem',
    requestStream: false,
    responseStream: false,
    requestType: services_provider_v1_provider_pb.CreateEcosystemRequest,
    responseType: services_provider_v1_provider_pb.CreateEcosystemResponse,
    requestSerialize: serialize_services_provider_v1_CreateEcosystemRequest,
    requestDeserialize: deserialize_services_provider_v1_CreateEcosystemRequest,
    responseSerialize: serialize_services_provider_v1_CreateEcosystemResponse,
    responseDeserialize: deserialize_services_provider_v1_CreateEcosystemResponse,
  },
  // Generates an unprotected authentication token that can be used to
// configure server side applications
generateToken: {
    path: '/services.provider.v1.Provider/GenerateToken',
    requestStream: false,
    responseStream: false,
    requestType: services_provider_v1_provider_pb.GenerateTokenRequest,
    responseType: services_provider_v1_provider_pb.GenerateTokenResponse,
    requestSerialize: serialize_services_provider_v1_GenerateTokenRequest,
    requestDeserialize: deserialize_services_provider_v1_GenerateTokenRequest,
    responseSerialize: serialize_services_provider_v1_GenerateTokenResponse,
    responseDeserialize: deserialize_services_provider_v1_GenerateTokenResponse,
  },
  // Invite a user to the ecosystem
invite: {
    path: '/services.provider.v1.Provider/Invite',
    requestStream: false,
    responseStream: false,
    requestType: services_provider_v1_provider_pb.InviteRequest,
    responseType: services_provider_v1_provider_pb.InviteResponse,
    requestSerialize: serialize_services_provider_v1_InviteRequest,
    requestDeserialize: deserialize_services_provider_v1_InviteRequest,
    responseSerialize: serialize_services_provider_v1_InviteResponse,
    responseDeserialize: deserialize_services_provider_v1_InviteResponse,
  },
  // Check the invitation status
invitationStatus: {
    path: '/services.provider.v1.Provider/InvitationStatus',
    requestStream: false,
    responseStream: false,
    requestType: services_provider_v1_provider_pb.InvitationStatusRequest,
    responseType: services_provider_v1_provider_pb.InvitationStatusResponse,
    requestSerialize: serialize_services_provider_v1_InvitationStatusRequest,
    requestDeserialize: deserialize_services_provider_v1_InvitationStatusRequest,
    responseSerialize: serialize_services_provider_v1_InvitationStatusResponse,
    responseDeserialize: deserialize_services_provider_v1_InvitationStatusResponse,
  },
};

exports.ProviderClient = grpc.makeGenericClientConstructor(ProviderService);
