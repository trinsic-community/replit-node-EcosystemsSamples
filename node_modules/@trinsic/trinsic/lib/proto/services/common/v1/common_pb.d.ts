// package: services.common.v1
// file: services/common/v1/common.proto

/* tslint:disable */
/* eslint-disable */

import * as jspb from "google-protobuf";
import * as pbmse_v1_pbmse_pb from "../../../pbmse/v1/pbmse_pb";

export class ServerConfig extends jspb.Message { 
    getEndpoint(): string;
    setEndpoint(value: string): ServerConfig;
    getPort(): number;
    setPort(value: number): ServerConfig;
    getUseTls(): boolean;
    setUseTls(value: boolean): ServerConfig;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): ServerConfig.AsObject;
    static toObject(includeInstance: boolean, msg: ServerConfig): ServerConfig.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: ServerConfig, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): ServerConfig;
    static deserializeBinaryFromReader(message: ServerConfig, reader: jspb.BinaryReader): ServerConfig;
}

export namespace ServerConfig {
    export type AsObject = {
        endpoint: string,
        port: number,
        useTls: boolean,
    }
}

export class Nonce extends jspb.Message { 
    getTimestamp(): number;
    setTimestamp(value: number): Nonce;
    getRequestHash(): Uint8Array | string;
    getRequestHash_asU8(): Uint8Array;
    getRequestHash_asB64(): string;
    setRequestHash(value: Uint8Array | string): Nonce;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): Nonce.AsObject;
    static toObject(includeInstance: boolean, msg: Nonce): Nonce.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: Nonce, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): Nonce;
    static deserializeBinaryFromReader(message: Nonce, reader: jspb.BinaryReader): Nonce;
}

export namespace Nonce {
    export type AsObject = {
        timestamp: number,
        requestHash: Uint8Array | string,
    }
}

export enum ResponseStatus {
    SUCCESS = 0,
    WALLET_ACCESS_DENIED = 10,
    WALLET_EXISTS = 11,
    ITEM_NOT_FOUND = 20,
    SERIALIZATION_ERROR = 200,
    UNKNOWN_ERROR = 100,
}
