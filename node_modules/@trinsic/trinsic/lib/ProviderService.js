"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderService = void 0;
const ServiceBase_1 = __importDefault(require("./ServiceBase"));
const proto_1 = require("./proto");
class ProviderService extends ServiceBase_1.default {
    client;
    constructor(options) {
        super(options);
        this.client = new proto_1.ProviderClient(this.address, this.channelCredentials);
    }
    inviteParticipant(request) {
        return new Promise(async (resolve, reject) => {
            this.client.invite(request, await this.getMetadata(request), (error, response) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    invitationStatus(request) {
        return new Promise(async (resolve, reject) => {
            this.client.invitationStatus(request, await this.getMetadata(request), (error, response) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
    createEcosystem(request) {
        return new Promise(async (resolve, reject) => {
            this.client.createEcosystem(request, (error, response) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(response);
                }
            });
        });
    }
}
exports.ProviderService = ProviderService;
//# sourceMappingURL=ProviderService.js.map