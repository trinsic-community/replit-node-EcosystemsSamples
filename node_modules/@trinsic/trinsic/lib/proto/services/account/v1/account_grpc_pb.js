// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('@grpc/grpc-js');
var services_account_v1_account_pb = require('../../../services/account/v1/account_pb.js');
var services_common_v1_common_pb = require('../../../services/common/v1/common_pb.js');

function serialize_services_account_v1_InfoRequest(arg) {
  if (!(arg instanceof services_account_v1_account_pb.InfoRequest)) {
    throw new Error('Expected argument of type services.account.v1.InfoRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_InfoRequest(buffer_arg) {
  return services_account_v1_account_pb.InfoRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_InfoResponse(arg) {
  if (!(arg instanceof services_account_v1_account_pb.InfoResponse)) {
    throw new Error('Expected argument of type services.account.v1.InfoResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_InfoResponse(buffer_arg) {
  return services_account_v1_account_pb.InfoResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_ListDevicesRequest(arg) {
  if (!(arg instanceof services_account_v1_account_pb.ListDevicesRequest)) {
    throw new Error('Expected argument of type services.account.v1.ListDevicesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_ListDevicesRequest(buffer_arg) {
  return services_account_v1_account_pb.ListDevicesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_ListDevicesResponse(arg) {
  if (!(arg instanceof services_account_v1_account_pb.ListDevicesResponse)) {
    throw new Error('Expected argument of type services.account.v1.ListDevicesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_ListDevicesResponse(buffer_arg) {
  return services_account_v1_account_pb.ListDevicesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_RevokeDeviceRequest(arg) {
  if (!(arg instanceof services_account_v1_account_pb.RevokeDeviceRequest)) {
    throw new Error('Expected argument of type services.account.v1.RevokeDeviceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_RevokeDeviceRequest(buffer_arg) {
  return services_account_v1_account_pb.RevokeDeviceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_RevokeDeviceResponse(arg) {
  if (!(arg instanceof services_account_v1_account_pb.RevokeDeviceResponse)) {
    throw new Error('Expected argument of type services.account.v1.RevokeDeviceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_RevokeDeviceResponse(buffer_arg) {
  return services_account_v1_account_pb.RevokeDeviceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_SignInRequest(arg) {
  if (!(arg instanceof services_account_v1_account_pb.SignInRequest)) {
    throw new Error('Expected argument of type services.account.v1.SignInRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_SignInRequest(buffer_arg) {
  return services_account_v1_account_pb.SignInRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_services_account_v1_SignInResponse(arg) {
  if (!(arg instanceof services_account_v1_account_pb.SignInResponse)) {
    throw new Error('Expected argument of type services.account.v1.SignInResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_services_account_v1_SignInResponse(buffer_arg) {
  return services_account_v1_account_pb.SignInResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var AccountService = exports.AccountService = {
  // Sign in to an already existing account
signIn: {
    path: '/services.account.v1.Account/SignIn',
    requestStream: false,
    responseStream: false,
    requestType: services_account_v1_account_pb.SignInRequest,
    responseType: services_account_v1_account_pb.SignInResponse,
    requestSerialize: serialize_services_account_v1_SignInRequest,
    requestDeserialize: deserialize_services_account_v1_SignInRequest,
    responseSerialize: serialize_services_account_v1_SignInResponse,
    responseDeserialize: deserialize_services_account_v1_SignInResponse,
  },
  // rpc SIgnInConfirm       (SignInConfirmRequest)      returns (SignInConfirmResponse);
// Get account information
info: {
    path: '/services.account.v1.Account/Info',
    requestStream: false,
    responseStream: false,
    requestType: services_account_v1_account_pb.InfoRequest,
    responseType: services_account_v1_account_pb.InfoResponse,
    requestSerialize: serialize_services_account_v1_InfoRequest,
    requestDeserialize: deserialize_services_account_v1_InfoRequest,
    responseSerialize: serialize_services_account_v1_InfoResponse,
    responseDeserialize: deserialize_services_account_v1_InfoResponse,
  },
  // List all connected devices
listDevices: {
    path: '/services.account.v1.Account/ListDevices',
    requestStream: false,
    responseStream: false,
    requestType: services_account_v1_account_pb.ListDevicesRequest,
    responseType: services_account_v1_account_pb.ListDevicesResponse,
    requestSerialize: serialize_services_account_v1_ListDevicesRequest,
    requestDeserialize: deserialize_services_account_v1_ListDevicesRequest,
    responseSerialize: serialize_services_account_v1_ListDevicesResponse,
    responseDeserialize: deserialize_services_account_v1_ListDevicesResponse,
  },
  // Revoke device access to the account's cloud wallet
revokeDevice: {
    path: '/services.account.v1.Account/RevokeDevice',
    requestStream: false,
    responseStream: false,
    requestType: services_account_v1_account_pb.RevokeDeviceRequest,
    responseType: services_account_v1_account_pb.RevokeDeviceResponse,
    requestSerialize: serialize_services_account_v1_RevokeDeviceRequest,
    requestDeserialize: deserialize_services_account_v1_RevokeDeviceRequest,
    responseSerialize: serialize_services_account_v1_RevokeDeviceResponse,
    responseDeserialize: deserialize_services_account_v1_RevokeDeviceResponse,
  },
};

exports.AccountClient = grpc.makeGenericClientConstructor(AccountService);
