// source: services/trust-registry/v1/trust-registry.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var services_common_v1_common_pb = require('../../../services/common/v1/common_pb.js');
goog.object.extend(proto, services_common_v1_common_pb);
goog.exportSymbol('proto.services.trustregistry.v1.AddFrameworkRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.AddFrameworkResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckIssuerStatusRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckIssuerStatusRequest.MemberCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckIssuerStatusResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckVerifierStatusRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckVerifierStatusRequest.MemberCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.CheckVerifierStatusResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.FetchDataRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.FetchDataResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.GovernanceFramework', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterIssuerRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterIssuerRequest.AuthorityCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterIssuerResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterVerifierRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterVerifierRequest.AuthorityCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegisterVerifierResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RegistrationStatus', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RemoveFrameworkRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.RemoveFrameworkResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.SearchRegistryRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.SearchRegistryResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterIssuerRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterIssuerRequest.AuthorityCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterIssuerResponse', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterVerifierRequest', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterVerifierRequest.AuthorityCase', null, global);
goog.exportSymbol('proto.services.trustregistry.v1.UnregisterVerifierResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.AddFrameworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.AddFrameworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.AddFrameworkRequest.displayName = 'proto.services.trustregistry.v1.AddFrameworkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.AddFrameworkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.AddFrameworkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.AddFrameworkResponse.displayName = 'proto.services.trustregistry.v1.AddFrameworkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.RemoveFrameworkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RemoveFrameworkRequest.displayName = 'proto.services.trustregistry.v1.RemoveFrameworkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.RemoveFrameworkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RemoveFrameworkResponse.displayName = 'proto.services.trustregistry.v1.RemoveFrameworkResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.SearchRegistryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.SearchRegistryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.SearchRegistryRequest.displayName = 'proto.services.trustregistry.v1.SearchRegistryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.SearchRegistryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.SearchRegistryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.SearchRegistryResponse.displayName = 'proto.services.trustregistry.v1.SearchRegistryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.GovernanceFramework = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.GovernanceFramework, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.GovernanceFramework.displayName = 'proto.services.trustregistry.v1.GovernanceFramework';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RegisterIssuerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.RegisterIssuerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RegisterIssuerRequest.displayName = 'proto.services.trustregistry.v1.RegisterIssuerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RegisterIssuerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.RegisterIssuerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RegisterIssuerResponse.displayName = 'proto.services.trustregistry.v1.RegisterIssuerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RegisterVerifierRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.RegisterVerifierRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RegisterVerifierRequest.displayName = 'proto.services.trustregistry.v1.RegisterVerifierRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.RegisterVerifierResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.RegisterVerifierResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.RegisterVerifierResponse.displayName = 'proto.services.trustregistry.v1.RegisterVerifierResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.UnregisterIssuerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.UnregisterIssuerRequest.displayName = 'proto.services.trustregistry.v1.UnregisterIssuerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.UnregisterIssuerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.UnregisterIssuerResponse.displayName = 'proto.services.trustregistry.v1.UnregisterIssuerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.UnregisterVerifierRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.UnregisterVerifierRequest.displayName = 'proto.services.trustregistry.v1.UnregisterVerifierRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.UnregisterVerifierResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.UnregisterVerifierResponse.displayName = 'proto.services.trustregistry.v1.UnregisterVerifierResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.CheckIssuerStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.CheckIssuerStatusRequest.displayName = 'proto.services.trustregistry.v1.CheckIssuerStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.CheckIssuerStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.CheckIssuerStatusResponse.displayName = 'proto.services.trustregistry.v1.CheckIssuerStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_);
};
goog.inherits(proto.services.trustregistry.v1.CheckVerifierStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.CheckVerifierStatusRequest.displayName = 'proto.services.trustregistry.v1.CheckVerifierStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.CheckVerifierStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.CheckVerifierStatusResponse.displayName = 'proto.services.trustregistry.v1.CheckVerifierStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.FetchDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.FetchDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.FetchDataRequest.displayName = 'proto.services.trustregistry.v1.FetchDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.trustregistry.v1.FetchDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.trustregistry.v1.FetchDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.trustregistry.v1.FetchDataResponse.displayName = 'proto.services.trustregistry.v1.FetchDataResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.AddFrameworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.AddFrameworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.AddFrameworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFramework: (f = msg.getGovernanceFramework()) && proto.services.trustregistry.v1.GovernanceFramework.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.AddFrameworkRequest}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.AddFrameworkRequest;
  return proto.services.trustregistry.v1.AddFrameworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.AddFrameworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.AddFrameworkRequest}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.trustregistry.v1.GovernanceFramework;
      reader.readMessage(value,proto.services.trustregistry.v1.GovernanceFramework.deserializeBinaryFromReader);
      msg.setGovernanceFramework(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.AddFrameworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.AddFrameworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.AddFrameworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFramework();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.trustregistry.v1.GovernanceFramework.serializeBinaryToWriter
    );
  }
};


/**
 * optional GovernanceFramework governance_framework = 1;
 * @return {?proto.services.trustregistry.v1.GovernanceFramework}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.getGovernanceFramework = function() {
  return /** @type{?proto.services.trustregistry.v1.GovernanceFramework} */ (
    jspb.Message.getWrapperField(this, proto.services.trustregistry.v1.GovernanceFramework, 1));
};


/**
 * @param {?proto.services.trustregistry.v1.GovernanceFramework|undefined} value
 * @return {!proto.services.trustregistry.v1.AddFrameworkRequest} returns this
*/
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.setGovernanceFramework = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.trustregistry.v1.AddFrameworkRequest} returns this
 */
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.clearGovernanceFramework = function() {
  return this.setGovernanceFramework(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.AddFrameworkRequest.prototype.hasGovernanceFramework = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.AddFrameworkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.AddFrameworkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.AddFrameworkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.AddFrameworkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.AddFrameworkResponse}
 */
proto.services.trustregistry.v1.AddFrameworkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.AddFrameworkResponse;
  return proto.services.trustregistry.v1.AddFrameworkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.AddFrameworkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.AddFrameworkResponse}
 */
proto.services.trustregistry.v1.AddFrameworkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.AddFrameworkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.AddFrameworkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.AddFrameworkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.AddFrameworkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.AddFrameworkResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.AddFrameworkResponse} returns this
 */
proto.services.trustregistry.v1.AddFrameworkResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RemoveFrameworkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFramework: (f = msg.getGovernanceFramework()) && proto.services.trustregistry.v1.GovernanceFramework.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkRequest}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RemoveFrameworkRequest;
  return proto.services.trustregistry.v1.RemoveFrameworkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkRequest}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.trustregistry.v1.GovernanceFramework;
      reader.readMessage(value,proto.services.trustregistry.v1.GovernanceFramework.deserializeBinaryFromReader);
      msg.setGovernanceFramework(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RemoveFrameworkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFramework();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.trustregistry.v1.GovernanceFramework.serializeBinaryToWriter
    );
  }
};


/**
 * optional GovernanceFramework governance_framework = 1;
 * @return {?proto.services.trustregistry.v1.GovernanceFramework}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.getGovernanceFramework = function() {
  return /** @type{?proto.services.trustregistry.v1.GovernanceFramework} */ (
    jspb.Message.getWrapperField(this, proto.services.trustregistry.v1.GovernanceFramework, 1));
};


/**
 * @param {?proto.services.trustregistry.v1.GovernanceFramework|undefined} value
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkRequest} returns this
*/
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.setGovernanceFramework = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkRequest} returns this
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.clearGovernanceFramework = function() {
  return this.setGovernanceFramework(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.RemoveFrameworkRequest.prototype.hasGovernanceFramework = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RemoveFrameworkResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkResponse}
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RemoveFrameworkResponse;
  return proto.services.trustregistry.v1.RemoveFrameworkResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkResponse}
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RemoveFrameworkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RemoveFrameworkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.RemoveFrameworkResponse} returns this
 */
proto.services.trustregistry.v1.RemoveFrameworkResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.SearchRegistryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.SearchRegistryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.SearchRegistryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    continuationToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.SearchRegistryRequest}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.SearchRegistryRequest;
  return proto.services.trustregistry.v1.SearchRegistryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.SearchRegistryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.SearchRegistryRequest}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContinuationToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.SearchRegistryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.SearchRegistryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.SearchRegistryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContinuationToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryRequest} returns this
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string continuation_token = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.getContinuationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryRequest} returns this
 */
proto.services.trustregistry.v1.SearchRegistryRequest.prototype.setContinuationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.SearchRegistryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.SearchRegistryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.SearchRegistryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsJson: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hasMore: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    continuationToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.SearchRegistryResponse;
  return proto.services.trustregistry.v1.SearchRegistryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.SearchRegistryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemsJson(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasMore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContinuationToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.SearchRegistryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.SearchRegistryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.SearchRegistryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHasMore();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getContinuationToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string items_json = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.getItemsJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse} returns this
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.setItemsJson = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool has_more = 2;
 * @return {boolean}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.getHasMore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse} returns this
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.setHasMore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse} returns this
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string continuation_token = 4;
 * @return {string}
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.getContinuationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.SearchRegistryResponse} returns this
 */
proto.services.trustregistry.v1.SearchRegistryResponse.prototype.setContinuationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.GovernanceFramework.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.GovernanceFramework} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.GovernanceFramework.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    trustRegistryUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.GovernanceFramework}
 */
proto.services.trustregistry.v1.GovernanceFramework.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.GovernanceFramework;
  return proto.services.trustregistry.v1.GovernanceFramework.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.GovernanceFramework} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.GovernanceFramework}
 */
proto.services.trustregistry.v1.GovernanceFramework.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrustRegistryUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.GovernanceFramework.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.GovernanceFramework} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.GovernanceFramework.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTrustRegistryUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string governance_framework_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.GovernanceFramework} returns this
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string trust_registry_uri = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.getTrustRegistryUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.GovernanceFramework} returns this
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.setTrustRegistryUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.GovernanceFramework} returns this
 */
proto.services.trustregistry.v1.GovernanceFramework.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.AuthorityCase = {
  AUTHORITY_NOT_SET: 0,
  DID_URI: 1,
  X509_CERT: 2
};

/**
 * @return {proto.services.trustregistry.v1.RegisterIssuerRequest.AuthorityCase}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getAuthorityCase = function() {
  return /** @type {proto.services.trustregistry.v1.RegisterIssuerRequest.AuthorityCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RegisterIssuerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RegisterIssuerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    didUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentialTypeUri: jspb.Message.getFieldWithDefault(msg, 10, ""),
    validFromUtc: jspb.Message.getFieldWithDefault(msg, 11, 0),
    validUntilUtc: jspb.Message.getFieldWithDefault(msg, 12, 0),
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RegisterIssuerRequest;
  return proto.services.trustregistry.v1.RegisterIssuerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RegisterIssuerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialTypeUri(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidFromUtc(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidUntilUtc(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RegisterIssuerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RegisterIssuerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentialTypeUri();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getValidFromUtc();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getValidUntilUtc();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string did_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string x509_cert = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.RegisterIssuerRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string credential_type_uri = 10;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getCredentialTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setCredentialTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 valid_from_utc = 11;
 * @return {number}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getValidFromUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setValidFromUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 valid_until_utc = 12;
 * @return {number}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getValidUntilUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setValidUntilUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string governance_framework_uri = 20;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RegisterIssuerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RegisterIssuerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerResponse}
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RegisterIssuerResponse;
  return proto.services.trustregistry.v1.RegisterIssuerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RegisterIssuerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RegisterIssuerResponse}
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RegisterIssuerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RegisterIssuerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.RegisterIssuerResponse} returns this
 */
proto.services.trustregistry.v1.RegisterIssuerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.AuthorityCase = {
  AUTHORITY_NOT_SET: 0,
  DID_URI: 1,
  X509_CERT: 2
};

/**
 * @return {proto.services.trustregistry.v1.RegisterVerifierRequest.AuthorityCase}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getAuthorityCase = function() {
  return /** @type {proto.services.trustregistry.v1.RegisterVerifierRequest.AuthorityCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RegisterVerifierRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RegisterVerifierRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    didUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 2, ""),
    presentationTypeUri: jspb.Message.getFieldWithDefault(msg, 10, ""),
    validFromUtc: jspb.Message.getFieldWithDefault(msg, 11, 0),
    validUntilUtc: jspb.Message.getFieldWithDefault(msg, 12, 0),
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RegisterVerifierRequest;
  return proto.services.trustregistry.v1.RegisterVerifierRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RegisterVerifierRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationTypeUri(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidFromUtc(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidUntilUtc(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RegisterVerifierRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RegisterVerifierRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPresentationTypeUri();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getValidFromUtc();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getValidUntilUtc();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string did_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string x509_cert = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.RegisterVerifierRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string presentation_type_uri = 10;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getPresentationTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setPresentationTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 valid_from_utc = 11;
 * @return {number}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getValidFromUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setValidFromUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 valid_until_utc = 12;
 * @return {number}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getValidUntilUtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setValidUntilUtc = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string governance_framework_uri = 20;
 * @return {string}
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.RegisterVerifierResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.RegisterVerifierResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierResponse}
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.RegisterVerifierResponse;
  return proto.services.trustregistry.v1.RegisterVerifierResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.RegisterVerifierResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.RegisterVerifierResponse}
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.RegisterVerifierResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.RegisterVerifierResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.RegisterVerifierResponse} returns this
 */
proto.services.trustregistry.v1.RegisterVerifierResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.AuthorityCase = {
  AUTHORITY_NOT_SET: 0,
  DID_URI: 1,
  X509_CERT: 2
};

/**
 * @return {proto.services.trustregistry.v1.UnregisterIssuerRequest.AuthorityCase}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.getAuthorityCase = function() {
  return /** @type {proto.services.trustregistry.v1.UnregisterIssuerRequest.AuthorityCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.UnregisterIssuerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    didUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 2, ""),
    credentialTypeUri: jspb.Message.getFieldWithDefault(msg, 10, ""),
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.UnregisterIssuerRequest;
  return proto.services.trustregistry.v1.UnregisterIssuerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialTypeUri(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.UnregisterIssuerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCredentialTypeUri();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string did_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string x509_cert = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.UnregisterIssuerRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string credential_type_uri = 10;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.getCredentialTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.setCredentialTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string governance_framework_uri = 20;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.UnregisterIssuerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerResponse}
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.UnregisterIssuerResponse;
  return proto.services.trustregistry.v1.UnregisterIssuerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerResponse}
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.UnregisterIssuerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.UnregisterIssuerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.UnregisterIssuerResponse} returns this
 */
proto.services.trustregistry.v1.UnregisterIssuerResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.AuthorityCase = {
  AUTHORITY_NOT_SET: 0,
  DID_URI: 1,
  X509_CERT: 2
};

/**
 * @return {proto.services.trustregistry.v1.UnregisterVerifierRequest.AuthorityCase}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.getAuthorityCase = function() {
  return /** @type {proto.services.trustregistry.v1.UnregisterVerifierRequest.AuthorityCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.UnregisterVerifierRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    didUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 2, ""),
    presentationTypeUri: jspb.Message.getFieldWithDefault(msg, 10, ""),
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.UnregisterVerifierRequest;
  return proto.services.trustregistry.v1.UnregisterVerifierRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationTypeUri(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.UnregisterVerifierRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPresentationTypeUri();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string did_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 1, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string x509_cert = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.UnregisterVerifierRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string presentation_type_uri = 10;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.getPresentationTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.setPresentationTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string governance_framework_uri = 20;
 * @return {string}
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierRequest} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.UnregisterVerifierResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierResponse}
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.UnregisterVerifierResponse;
  return proto.services.trustregistry.v1.UnregisterVerifierResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierResponse}
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.common.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.UnregisterVerifierResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.UnregisterVerifierResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional services.common.v1.ResponseStatus status = 1;
 * @return {!proto.services.common.v1.ResponseStatus}
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.common.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.common.v1.ResponseStatus} value
 * @return {!proto.services.trustregistry.v1.UnregisterVerifierResponse} returns this
 */
proto.services.trustregistry.v1.UnregisterVerifierResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.MemberCase = {
  MEMBER_NOT_SET: 0,
  DID_URI: 2,
  X509_CERT: 3
};

/**
 * @return {proto.services.trustregistry.v1.CheckIssuerStatusRequest.MemberCase}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.getMemberCase = function() {
  return /** @type {proto.services.trustregistry.v1.CheckIssuerStatusRequest.MemberCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.CheckIssuerStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    didUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 3, ""),
    credentialTypeUri: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.CheckIssuerStatusRequest;
  return proto.services.trustregistry.v1.CheckIssuerStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialTypeUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.CheckIssuerStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCredentialTypeUri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string governance_framework_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string did_uri = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string x509_cert = 3;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 3, proto.services.trustregistry.v1.CheckIssuerStatusRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string credential_type_uri = 4;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.getCredentialTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusRequest.prototype.setCredentialTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.CheckIssuerStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusResponse}
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.CheckIssuerStatusResponse;
  return proto.services.trustregistry.v1.CheckIssuerStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusResponse}
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.trustregistry.v1.RegistrationStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.CheckIssuerStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.CheckIssuerStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional RegistrationStatus status = 1;
 * @return {!proto.services.trustregistry.v1.RegistrationStatus}
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.trustregistry.v1.RegistrationStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.trustregistry.v1.RegistrationStatus} value
 * @return {!proto.services.trustregistry.v1.CheckIssuerStatusResponse} returns this
 */
proto.services.trustregistry.v1.CheckIssuerStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.MemberCase = {
  MEMBER_NOT_SET: 0,
  DID_URI: 2,
  X509_CERT: 3
};

/**
 * @return {proto.services.trustregistry.v1.CheckVerifierStatusRequest.MemberCase}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.getMemberCase = function() {
  return /** @type {proto.services.trustregistry.v1.CheckVerifierStatusRequest.MemberCase} */(jspb.Message.computeOneofCase(this, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.CheckVerifierStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    didUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    x509Cert: jspb.Message.getFieldWithDefault(msg, 3, ""),
    presentationTypeUri: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.CheckVerifierStatusRequest;
  return proto.services.trustregistry.v1.CheckVerifierStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDidUri(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setX509Cert(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresentationTypeUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.CheckVerifierStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPresentationTypeUri();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string governance_framework_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string did_uri = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.getDidUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.setDidUri = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.clearDidUri = function() {
  return jspb.Message.setOneofField(this, 2, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.hasDidUri = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string x509_cert = 3;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.getX509Cert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.setX509Cert = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.clearX509Cert = function() {
  return jspb.Message.setOneofField(this, 3, proto.services.trustregistry.v1.CheckVerifierStatusRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.hasX509Cert = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string presentation_type_uri = 4;
 * @return {string}
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.getPresentationTypeUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusRequest} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusRequest.prototype.setPresentationTypeUri = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.CheckVerifierStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusResponse}
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.CheckVerifierStatusResponse;
  return proto.services.trustregistry.v1.CheckVerifierStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusResponse}
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.trustregistry.v1.RegistrationStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.CheckVerifierStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.CheckVerifierStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional RegistrationStatus status = 1;
 * @return {!proto.services.trustregistry.v1.RegistrationStatus}
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.services.trustregistry.v1.RegistrationStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.trustregistry.v1.RegistrationStatus} value
 * @return {!proto.services.trustregistry.v1.CheckVerifierStatusResponse} returns this
 */
proto.services.trustregistry.v1.CheckVerifierStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.FetchDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.FetchDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.FetchDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    governanceFrameworkUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.FetchDataRequest}
 */
proto.services.trustregistry.v1.FetchDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.FetchDataRequest;
  return proto.services.trustregistry.v1.FetchDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.FetchDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.FetchDataRequest}
 */
proto.services.trustregistry.v1.FetchDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGovernanceFrameworkUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.FetchDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.FetchDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.FetchDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGovernanceFrameworkUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string governance_framework_uri = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.getGovernanceFrameworkUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.FetchDataRequest} returns this
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.setGovernanceFrameworkUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.FetchDataRequest} returns this
 */
proto.services.trustregistry.v1.FetchDataRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.trustregistry.v1.FetchDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.trustregistry.v1.FetchDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.FetchDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseJson: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hasMoreResults: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    continuationToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.trustregistry.v1.FetchDataResponse}
 */
proto.services.trustregistry.v1.FetchDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.trustregistry.v1.FetchDataResponse;
  return proto.services.trustregistry.v1.FetchDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.trustregistry.v1.FetchDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.trustregistry.v1.FetchDataResponse}
 */
proto.services.trustregistry.v1.FetchDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseJson(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasMoreResults(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContinuationToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.trustregistry.v1.FetchDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.trustregistry.v1.FetchDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.trustregistry.v1.FetchDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHasMoreResults();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getContinuationToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string response_json = 1;
 * @return {string}
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.getResponseJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.FetchDataResponse} returns this
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.setResponseJson = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool has_more_results = 2;
 * @return {boolean}
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.getHasMoreResults = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.trustregistry.v1.FetchDataResponse} returns this
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.setHasMoreResults = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string continuation_token = 3;
 * @return {string}
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.getContinuationToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.trustregistry.v1.FetchDataResponse} returns this
 */
proto.services.trustregistry.v1.FetchDataResponse.prototype.setContinuationToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.services.trustregistry.v1.RegistrationStatus = {
  CURRENT: 0,
  EXPIRED: 1,
  TERMINATED: 2,
  REVOKED: 3,
  NOT_FOUND: 10
};

goog.object.extend(exports, proto.services.trustregistry.v1);
